<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Accord.Extensions.Imaging.AForgeInterop</name>
    </assembly>
    <members>
        <member name="T:Accord.Extensions.Imaging.AForgeFilterProcessing">
            <summary>
            Contains extension methods for AForge imaging filters execution.
            </summary>
        </member>
        <member name="M:Accord.Extensions.Imaging.AForgeFilterProcessing.ApplyFilter``2(``0[0:,0:],``1,System.Boolean)">
            <summary>
            Executes specified filter on an image.
            </summary>
            <param name="img">Image.</param>
            <param name="filter">AForge filter.</param>
            <param name="inPlace">Execute in place or not. Please use this switch correctly as some filters may not be processed correctly.</param>
            <returns>Processed image. In case <paramref name="inPlace"/> is set to true, result is processed source image (can be discarded).</returns>
        </member>
        <member name="M:Accord.Extensions.Imaging.AForgeFilterProcessing.ApplyFilter``1(``0[0:,0:],AForge.Imaging.Filters.BaseFilter)">
            <summary>
            Executes specified filter on an image. As destination image size may be different from source in-place filtering is not allowed.
            </summary>
            <param name="img">Image.</param>
            <param name="filter">AForge <see cref="T:AForge.Imaging.Filters.BaseFilter"/>.</param>
        </member>
        <member name="M:Accord.Extensions.Imaging.AForgeFilterProcessing.ApplyFilter``1(``0[0:,0:],AForge.Imaging.Filters.BaseUsingCopyPartialFilter)">
            <summary>
            Executes specified filter on an image. 
            <see cref="T:AForge.Imaging.Filters.BaseUsingCopyPartialFilter"/> must copy an image if in place operation is requested, so it was decided that in-place filtering is not allowed.
            </summary>
            <param name="img">Image.</param>
            <param name="filter">AForge <see cref="T:AForge.Imaging.Filters.BaseUsingCopyPartialFilter"/>.</param>
        </member>
        <member name="M:Accord.Extensions.Imaging.AForgeFilterProcessing.ApplyFilter``1(``0[0:,0:],AForge.Imaging.Filters.BaseInPlaceFilter,System.Boolean)">
            <summary>
            Executes specified filter on an image. 
            </summary>
            <param name="img">Image.</param>
            <param name="filter">AForge <see cref="T:AForge.Imaging.Filters.BaseInPlaceFilter"/>.</param>
            <param name="inPlace">Execute in place or not. Please use this switch correctly as some filters may not be processed correctly.</param>
        </member>
        <member name="M:Accord.Extensions.Imaging.AForgeFilterProcessing.ApplyFilter``1(``0[0:,0:],AForge.Imaging.Filters.BaseInPlacePartialFilter,System.Boolean)">
            <summary>
            Executes specified filter on an image.
            </summary>
            <param name="img">Image.</param>
            <param name="filter">AForge <see cref="T:AForge.Imaging.Filters.BaseInPlacePartialFilter"/>.</param>
            <param name="inPlace">Execute in place or not. Please use this switch correctly as some filters may not be processed correctly.</param>
        </member>
        <member name="M:Accord.Extensions.Imaging.AForgeFilterProcessing.ApplyBaseTransformationFilter``1(``0[0:,0:],AForge.Imaging.Filters.BaseTransformationFilter)">
            <summary>
            Executes specified filter on an image. As destination image size may be different from source; in-place filtering is not allowed.
            </summary>
            <param name="img">Image.</param>
            <param name="filter">AForge <see cref="T:AForge.Imaging.Filters.BaseTransformationFilter"/>.</param>
        </member>
        <member name="M:Accord.Extensions.Imaging.AForgeFilterProcessing.ApplyBaseTransformationFilter``2(``0[0:,0:],AForge.Imaging.Filters.BaseTransformationFilter)">
            <summary>
            Executes specified filter on an image. As destination image size may be different from source; in-place filtering is not allowed.
            </summary>
            <param name="img">Image.</param>
            <param name="filter">AForge <see cref="T:AForge.Imaging.Filters.BaseTransformationFilter"/>.</param>
        </member>
        <member name="M:Accord.Extensions.Imaging.AForgeFilterProcessing.ApplyBaseResizeFilter``1(``0[0:,0:],AForge.Imaging.Filters.BaseResizeFilter)">
            <summary>
            Executes specified filter on an image. As destination image size may be different from source; in-place filtering is not allowed.
            </summary>
            <param name="img">Image.</param>
            <param name="filter">AForge <see cref="T:AForge.Imaging.Filters.BaseTransformationFilter"/>.</param>
        </member>
        <member name="T:Accord.Extensions.Imaging.UnmanagedImageConversionExtensions">
            <summary>
            Contains extension methods for <see cref="T:AForge.Imaging.UnmanagedImage"/> interoperability.
            </summary>
        </member>
        <member name="M:Accord.Extensions.Imaging.UnmanagedImageConversionExtensions.AsImage(AForge.Imaging.UnmanagedImage)">
            <summary>
            Converts unmanaged image to generic image (IImage) but without data copy. 
            Format depends upon unmanaged image pixel format (e.g. 8bppGray -> [Gray, byte], 24bppColor -> [Color3, byte]...).
            </summary>
            <param name="unmanagedImage"> Unmanaged image</param>
            <returns>Generic image (interface)</returns>
        </member>
        <member name="M:Accord.Extensions.Imaging.UnmanagedImageConversionExtensions.AsAForgeImage``1(DotImaging.Image{``0})">
            <summary>
            Converts generic image to unmanaged image but without data copy. 
            </summary>
            <typeparam name="TColor">Color type.</typeparam>
            <param name="image">Unmanaged image</param>
            <returns>Unmanaged image.</returns>
        </member>
        <member name="T:Accord.Extensions.Imaging.AForgePointConversion">
            <summary>
            Contains extensions for conversion between Imaging.NET and AForge Point structures.
            </summary>
        </member>
        <member name="M:Accord.Extensions.Imaging.AForgePointConversion.ToIntPoint(DotImaging.Primitives2D.Point)">
            <summary>
            Converts Imaging.NET point to AForge.NET representation.
            </summary>
            <param name="point">Point.</param>
            <returns>Converted point.</returns>
        </member>
        <member name="M:Accord.Extensions.Imaging.AForgePointConversion.ToPoint(DotImaging.Primitives2D.PointF)">
            <summary>
            Converts Imaging.NET point to AForge.NET representation.
            </summary>
            <param name="point">Point.</param>
            <returns>Converted point.</returns>
        </member>
        <member name="M:Accord.Extensions.Imaging.AForgePointConversion.ToPoint(AForge.IntPoint)">
            <summary>
            Converts AForge.NET point to Imaging.NET representation.
            </summary>
            <param name="point">Point.</param>
            <returns>Converted point.</returns>
        </member>
        <member name="M:Accord.Extensions.Imaging.AForgePointConversion.ToPointF(AForge.Point)">
            <summary>
            Converts AForge.NET point to Imaging.NET representation.
            </summary>
            <param name="point">Point.</param>
            <returns>Converted point.</returns>
        </member>
        <member name="M:Accord.Extensions.Imaging.AForgePointConversion.ToPoints(AForge.IntPoint[])">
            <summary>
            Converts AForge.NET points to Imaging.NET representation.
            </summary>
            <param name="point">Points.</param>
            <returns>Converted points.</returns>
        </member>
        <member name="M:Accord.Extensions.Imaging.AForgePointConversion.ToPoints(AForge.IntPoint[][])">
            <summary>
            Converts AForge.NET points to Imaging.NET representation.
            </summary>
            <param name="point">Points.</param>
            <returns>Converted points.</returns>
        </member>
        <member name="M:Accord.Extensions.Imaging.AForgePointConversion.ToPoints(DotImaging.Primitives2D.Point[])">
            <summary>
            Converts Imaging.NET points to AForge.NET representation.
            </summary>
            <param name="point">Points.</param>
            <returns>Converted points.</returns>
        </member>
    </members>
</doc>
